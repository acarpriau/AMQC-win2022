location ^~ /nodered/ui/socket.io/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Host $host;

    proxy_hide_header 'Access-Control-Allow-Origin';

    if ($request_method = 'OPTIONS') {
        # if request method is options we immediately return with 200 OK.
        return 200;
    }

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    auth_basic "Restricted"; #For Basic Auth
    auth_basic_user_file /etc/nginx/conf.d/.htpasswd; #For Basic Auth
    proxy_pass http://nodered:1880;
    proxy_redirect off;
}

location /nodered/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Host $host;

    proxy_hide_header 'Access-Control-Allow-Origin';

    if ($request_method = 'OPTIONS') {
        # if request method is options we immediately return with 200 OK.
        return 200;
    }

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

#    auth_basic "Restricted"; #For Basic Auth
#    auth_basic_user_file /etc/nginx/conf.d/.htpasswd; #For Basic Auth

    resolver 127.0.0.11;
    access_by_lua_block{
      local redis = require "resty.redis"
      local red = redis:new()
      red:set_timeout(1000) -- 1 sec

      local ok, err = red:connect("redis", 6379)
      if not ok then
         ngx.exit(ngx.HTTP_FORBIDDEN)
         return
      end

      tok = ngx.var.cookie_nyx_kibananyx
      if not tok then
         ngx.exit(ngx.HTTP_NOT_ACCEPTABLE)
         return
      end

      local rediskey = "nyx_nodered_" .. tok
      local res, err = red:get(rediskey)
      if not res then
         ngx.exit(ngx.HTTP_CONFLICT)
         return
      end

      if res == ngx.null then
         ngx.exit(ngx.HTTP_NOT_ALLOWED)
         return
      end
    }

    proxy_pass http://nodered:1880;
    proxy_redirect off;
}
